version: "3.7"
services:
  postgres:
    image: postgres:11
    container_name: airflow-postgres
    networks:
      - airflow-net
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
  webserver:
    image: puckel/docker-airflow:1.10.6
    container_name: webserver
    command: webserver
    networks:
      - airflow-net
    user: root # for DockerOperator
    volumes:
      - ${HOME}/.aws:/root/.aws # run as root user
      - ./requirements.txt:/requirements.txt
      - ./dags:/usr/local/airflow/dags
      - ./config/airflow.cfg:/usr/local/airflow/config/airflow.cfg
      - ./entrypoint.sh:/entrypoint.sh # override entrypoint
      - /var/run/docker.sock:/var/run/docker.sock # for DockerOperator
      - ./custom:/usr/local/airflow/custom
    ports:
      - 8080:8080
    environment:
      - AIRFLOW__CORE__LOGGING_LEVEL=INFO
      - AIRFLOW__CORE__FERNET_KEY=Gg3ELN1gITETZAbBQpLDBI1y2P0d7gHLe_7FwcDjmKc=
      - AIRFLOW__CORE__REMOTE_LOGGING=True
      - AIRFLOW__CORE__REMOTE_BASE_LOG_FOLDER=s3://airflow-log-local
      - AIRFLOW__CORE__ENCRYPT_S3_LOGS=True
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
      - AWS_DEFAULT_REGION=ap-southeast-2
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/config/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
  scheduler:
    image: puckel/docker-airflow:1.10.6
    container_name: scheduler
    command: scheduler
    networks:
      - airflow-net
    user: root # for DockerOperator
    volumes:
      - ${HOME}/.aws:/root/.aws # run as root user
      - ./requirements.txt:/requirements.txt
      - ./logs:/usr/local/airflow/logs
      - ./dags:/usr/local/airflow/dags
      - ./config/airflow.cfg:/usr/local/airflow/config/airflow.cfg
      - ./entrypoint.sh:/entrypoint.sh # override entrypoint
      - /var/run/docker.sock:/var/run/docker.sock # for DockerOperator
      - ./custom:/usr/local/airflow/custom
    environment:
      - AIRFLOW__CORE__LOGGING_LEVEL=INFO
      - AIRFLOW__CORE__FERNET_KEY=Gg3ELN1gITETZAbBQpLDBI1y2P0d7gHLe_7FwcDjmKc=
      - AIRFLOW__CORE__REMOTE_LOGGING=True
      - AIRFLOW__CORE__REMOTE_BASE_LOG_FOLDER=s3://airflow-log-local
      - AIRFLOW__CORE__ENCRYPT_S3_LOGS=True
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
      - AWS_DEFAULT_REGION=ap-southeast-2
    restart: always

networks:
  airflow-net:
    name: airflow-network