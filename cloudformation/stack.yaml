Parameters:
  LambdaPackageS3Bucket:
    Type: String
  LambdaPackageS3Key:
    Type: String
  FunctionName:
    Type: String
Resources:
  AirflowLogBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: airflow-lambda-logs
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  AirflowLambdaLogGroup: 
    Type: AWS::Logs::LogGroup
    Properties:
        LogGroupName: !Sub '/airflow/lambda/${FunctionName}'
        RetentionInDays: 365
  LambdaFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchCustom
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DeleteLogStream
                Resource: "*"
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties: 
      Description: Airflow Lambda Operator test function
      Code: 
        S3Bucket: !Ref LambdaPackageS3Bucket
        S3Key: !Ref LambdaPackageS3Key
      FunctionName: !Ref FunctionName
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaFunctionExecutionRole.Arn
      Runtime: python3.7
      Timeout: 15
      MemorySize: 128
